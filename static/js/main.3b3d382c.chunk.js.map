{"version":3,"sources":["api/TDX/getAuthorizationHeader.js","api/TDX/Bus/EstimatedTimeOfArrival.js","api/TDX/city_data.js","api/TDX/Bus/BusStop.js","assets/icons/pin.svg","assets/icons/directions_bus_filled_24dp.svg","assets/icons/radio_button_checked_black_24dp.svg","components/Map/BusRouteMap.jsx","assets/icons/map.svg","components/EstimationOfArrivalTime/BusEstimatedTimeList.jsx","assets/icons/west_24dp.svg","assets/icons/favorite_24dp.svg","assets/icons/favorite_border_24dp.svg","components/LocalStorage/LikedBusRoute.jsx","pages/BusEstimatedTime.jsx","constants/Trie.js","api/TDX/Bus/BusRoute.js","components/Search/BusRouteSearchList.jsx","assets/icons/search_black_24dp.svg","pages/FindBusRoute.jsx","api/TDX/Bus/BusStation.js","components/Search/BusStationSearchList.jsx","pages/FindBusStation.jsx","assets/icons/bus_c1.svg","assets/icons/bus_c2.svg","assets/icons/bus_c4.svg","assets/icons/bus_c3.svg","assets/icons/bus_c5.svg","components/Banner/Banner.jsx","components/Map/NearByBusStationMap.jsx","router/index.js","pages/Home.jsx","pages/NearByBusStation.jsx","pages/LikedList.jsx","components/LocalStorage/util.js","components/LocalStorage/StoreBusStation.jsx","components/Location/PosUserLocation.jsx","components/LocalStorage/StoreBusRoute.jsx","assets/icons/logo.svg","components/Header/Header.jsx","components/Footer/Footer.jsx","App.js","reportWebVitals.js","components/ScrollToTop.jsx","index.js"],"names":["getAuthorizationHeader","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","process","update","Authorization","getHMAC","getStopOfRoute","city","routeUID","a","axios","method","url","headers","then","response","data","catch","error","console","log","route_data","length","forEach","stop","StopSequence","find","route_dir_stop","Direction","Stops","route_stop","StopUID","ind","res","item","push","sort","b","city_data","Taipei","NewTaipei","Kaohsiung","Hsinchu","HsinchuCounty","MiaoliCounty","ChanghuaCounty","NantouCounty","YunlinCounty","ChiayiCounty","Chiayi","PingtungCounty","YilanCounty","HualienCounty","TaitungCounty","PenghuCounty","Tainan","KinmenCounty","Taoyuan","Taichung","route_city_data","Keelung","LienchiangCounty","stop_city_data","RouteUID","pin_icon","Icon","iconUrl","pin","iconSize","className","point_icon","point","PinStop","stopsOfRoute","direction","map","arr","Marker","position","StopPosition","PositionLat","PositionLon","icon","Popup","StopName","Zh_tw","BusRouteMap","pinStop","userLocation","useContext","UserLocationContext","BusStationContext","useState","setMap","useEffect","pos","Math","floor","setView","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","attribution","latitude","longitude","StopStatus","getEstimatedTimeStr","EstimateTime","minutes","ceil","NextBusTime","time","h","getHours","m","getMinutes","slice","EstimatedTimeItem","coming_status","getComingStatus","child","document","getElementById","parent","scrollTop","offsetTop","clientHeight","style","backgroundColor","id","getDistance","x","y","pow","BusEstimatedTimeList","estimateData","RouteData","setDirection","setPinStop","setStopsOfRoute","hideMap","setHideMap","getStopsOfRoute","City","distance","nearest_stop","d","onClick","src","DestinationStopNameZh","DepartureStopNameZh","height","LikedBusRoute","isLike","setIsLike","liked_bus_route_list","JSON","parse","localStorage","getItem","setItem","stringify","uid","favorite_24dp","favorite_border_24dp","alt","e","preventDefault","index","findIndex","splice","clickHandle","BusEstimatedTimeRouteName","RouteName","TrieNode","this","indices","children","cur","Object","entries","values","node","getAllIndices","Trie","root","word","i","prefix","getBusCityRoute","promise_arr","keys","data_arr","Promise","all","items","BusRouteSearchList","route_list","setCity","onChange","target","value","filter","to","FindBusRouteInput","inputHandle","search_black_24dp","placeholder","autoComplete","getBusCityStation","datas","StationEnName","En","StationUID","StationName","StationPosition","StationAddress","binarySearchLon","bus_station","goal_lon","left","right","mid","station","getNearByBusStation","radius","adjusted_radius","right_index","left_index","BusStationSearchList","station_list","busRoute","BusRouteContext","route","FindBusStationInput","Banner","bus_icon","bus","PinNearByBusStationPosition","nearByBusStation","NearByBusStationMap","busStation","setNearByBusStation","routes","path","exact","component","bus_c1","bus_c5","bus_c2","bus_c4","history","useHistory","inputContent","setInputContent","routeList","setRouteList","busRouteTrie","setBusRouteTrie","bus_route","t","insert","getBusRouteTrie","findAllIndices","item_ind","route1","route2","goBack","cursor","west_24dp","content","useParams","busEstimatedData","setBusEstimatedData","updateTime","setUpdateTime","tick","useCallback","periodic_action","setInterval","clearInterval","getBusRouteEstimatedArrival","stationList","setStationList","busStationTrie","setBusStationTrie","getBusStationTrie","station1","station2","pick","likedRouteList","getExpireTime","milliseconds","expire_time","shift","getTime","setTime","toUTCString","StoreBusStation","setBusStation","loading","setLoading","saved_bus_station","LZString","decompressFromBase64","getAllBusCityStation","compressToBase64","getLocation","setUserLocation","prevLocation","setPrevLocation","navigator","geolocation","getCurrentPosition","currentLocation","needUpdate","coords","msg","code","dd","message","PosUserLocation","period","StoreBusRoute","setBusRoute","saved_bus_route","getAllBusCityRoute","Header","isOpen","setOpen","logo","size","toggled","toggle","HamburgerMenu","Footer","createContext","App","Provider","renderRoutes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","withRouter","unlisten","listen","window","scrollTo","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3b3d382c.chunk.js","sourcesContent":["import jsSHA from 'jssha';\n\nfunction getAuthorizationHeader() {\n    const AppID = process.env.REACT_APP_API_ID || 'FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF';\n    const AppKey = process.env.REACT_APP_API_KEY || 'FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF';\n    \n    const GMTString = new Date().toGMTString();\n    const ShaObj = new jsSHA('SHA-1', 'TEXT');\n    ShaObj.setHMACKey(AppKey, 'TEXT');\n    ShaObj.update('x-date: ' + GMTString);\n    const HMAC = ShaObj.getHMAC('B64');\n    const Authorization = 'hmac username=\"' + AppID + '\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"' + HMAC + '\"';\n\n    return {\n        Authorization: Authorization,\n        'X-Date': GMTString\n    };\n}\n\nexport default getAuthorizationHeader;","import axios from \"axios\";\nimport {\n    DEBUG\n} from \"../../../constants/debug\";\nimport getAuthorizationHeader from \"../getAuthorizationHeader\";\n\n\nasync function getStopOfRoute(city, routeUID) {\n    return axios({\n            method: 'get',\n            url: `https://ptx.transportdata.tw/MOTC/v2/Bus/DisplayStopOfRoute/City/${city}?$select=Direction%2CStops&$filter=RouteUID%20eq%20'${routeUID}'&$format=JSON`,\n            headers: getAuthorizationHeader()\n        })\n        .then((response) => {\n            DEBUG && console.log(`${routeUID} StopOfRoute`, response);\n            return response.data;\n        })\n        .catch((error) => console.log(`error: StopOfRoute `, error))\n}\n\n\n// {\n//     \"StopUID\": \"TPE34747\",\n//     \"StopName\": {\n//         \"Zh_tw\": \"龍山寺(康定)\",\n//         \"En\": \"Longshan Temple(Kangding)\"\n//     },\n//     \"RouteUID\": \"TPE10181\",\n//     \"RouteName\": {\n//         \"Zh_tw\": \"205\",\n//         \"En\": \"205\"\n//     },\n//     \"Direction\": 1,\n//     \"EstimateTime\": 74,\n//     \"StopStatus\": 0,\n//     \"SrcUpdateTime\": \"2021-11-24T18:44:20+08:00\",\n//     \"UpdateTime\": \"2021-11-24T18:44:24+08:00\"\n// }, {\n//     \"StopUID\": \"TPE34746\",\n//     \"StopName\": {\n//         \"Zh_tw\": \"萬華車站\",\n//         \"En\": \"Wanhua Station\"\n//     },\n//     \"RouteUID\": \"TPE10181\",\n//     \"RouteName\": {\n//         \"Zh_tw\": \"205\",\n//         \"En\": \"205\"\n//     },\n//     \"Direction\": 1,\n//     \"EstimateTime\": 1991,\n//     \"StopStatus\": 0,\n//     \"SrcUpdateTime\": \"2021-11-24T18:44:20+08:00\",\n//     \"UpdateTime\": \"2021-11-24T18:44:24+08:00\"\n// },\n\nexport async function getBusRouteEstimatedArrival(city, routeUID) {\n    return axios({\n            method: 'get',\n            url: `https://ptx.transportdata.tw/MOTC/v2/Bus/EstimatedTimeOfArrival/City/${city}?$select=PlateNumb%2CStopUID%2CStopName%2CRouteUID%2CRouteName%2CSubRouteUID%2CSubRouteName%2CDirection%2CEstimateTime%2CCurrentStop%2CDestinationStop%2CStopSequence%2CStopStatus%2CNextBusTime%2CIsLastBus%2CSrcUpdateTime&$filter=RouteUID%20eq%20'${routeUID}'&$orderby=StopSequence&$format=JSON`,\n            headers: getAuthorizationHeader()\n        })\n        .then(async (response) => {\n            DEBUG && console.log(`${routeUID} 時間資料`, response);\n            let data = response.data;\n            return getStopOfRoute(city, routeUID)\n                .then(route_data => {\n                    if (route_data && route_data.length > 0) {\n                        data.forEach(stop => {\n                            stop.StopSequence = route_data.find(route_dir_stop =>\n                                stop.Direction === route_dir_stop.Direction\n                            ).Stops.find(route_stop => route_stop.StopUID === stop.StopUID).StopSequence;\n                        });\n                    } else {\n                        data.forEach((stop, ind) => {\n                            stop.StopSequence = ind;\n                        });\n                    }\n                })\n                .then(() => {\n                    let res = {\n                        0: [],\n                        1: [],\n                        2: [],\n                        255: []\n                    };\n                    data.forEach(item => {\n                        res[item.Direction].push(item);\n                    });\n                    for (let item in res) {\n                        res[item] = res[item].sort((a, b) =>\n                            +a.StopSequence < +b.StopSequence ? -1 : 1\n                        );\n                    }\n                    return res;\n                })\n        })\n        .catch((error) => console.log(`error: estimated arrival `, error))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// PlateNumb,StopUID,StopName,RouteUID,RouteName,SubRouteUID,SubRouteName,Direction,EstimateTime,CurrentStop,DestinationStop,StopSequence,StopStatus,NextBusTime,IsLastBus,SrcUpdateTime","export const city_data = {\n    Taipei: \"臺北市\",\n    NewTaipei: \"新北市\",\n    Kaohsiung: \"高雄市\",\n    Hsinchu: \"新竹市\",\n    HsinchuCounty: \"新竹縣\",\n    MiaoliCounty: \"苗栗縣\",\n    ChanghuaCounty: \"彰化縣\",\n    NantouCounty: \"南投縣\",\n    YunlinCounty: \"雲林縣\",\n    ChiayiCounty: \"嘉義縣\",\n    Chiayi: \"嘉義市\",\n    PingtungCounty: \"屏東縣\",\n    YilanCounty: \"宜蘭縣\",\n    HualienCounty: \"花蓮縣\",\n    TaitungCounty: \"臺東縣\",\n    PenghuCounty: \"澎湖縣\",\n    Tainan: \"臺南市\",\n    KinmenCounty: \"金門縣\",\n    Taoyuan: \"桃園市\",\n    Taichung: \"臺中市\"\n}\nexport const route_city_data = {\n    Taipei: \"臺北市\",\n    NewTaipei: \"新北市\",\n    Taoyuan: \"桃園市\",\n    Taichung: \"臺中市\",\n    Tainan: \"臺南市\",\n    Kaohsiung: \"高雄市\",\n    Keelung: \"基隆市\",\n    Hsinchu: \"新竹市\",\n    HsinchuCounty: \"新竹縣\",\n    MiaoliCounty: \"苗栗縣\",\n    ChanghuaCounty: \"彰化縣\",\n    NantouCounty: \"南投縣\",\n    YunlinCounty: \"雲林縣\",\n    ChiayiCounty: \"嘉義縣\",\n    Chiayi: \"嘉義市\",\n    PingtungCounty: \"屏東縣\",\n    YilanCounty: \"宜蘭縣\",\n    HualienCounty: \"花蓮縣\",\n    TaitungCounty: \"臺東縣\",\n    KinmenCounty: \"金門縣\",\n    PenghuCounty: \"澎湖縣\",\n    LienchiangCounty: \"連江縣\",\n};\n\nexport const stop_city_data = {\n    NewTaipei: \"新北市\",\n    Taoyuan: \"桃園市\",\n    Taichung: \"臺中市\",\n    Tainan: \"臺南市\",\n    Kaohsiung: \"高雄市\",\n    Keelung: \"基隆市\",\n    Hsinchu: \"新竹市\",\n    HsinchuCounty: \"新竹縣\",\n    MiaoliCounty: \"苗栗縣\",\n    ChanghuaCounty: \"彰化縣\",\n    NantouCounty: \"南投縣\",\n    YunlinCounty: \"雲林縣\",\n    ChiayiCounty: \"嘉義縣\",\n    Chiayi: \"嘉義市\",\n    PingtungCounty: \"屏東縣\",\n    YilanCounty: \"宜蘭縣\",\n    HualienCounty: \"花蓮縣\",\n    TaitungCounty: \"臺東縣\",\n    KinmenCounty: \"金門縣\",\n    PenghuCounty: \"澎湖縣\",\n    LienchiangCounty: \"連江縣\",\n    Taipei: \"臺北市\",\n}","import axios from \"axios\";\nimport {\n    stop_city_data\n} from \"../city_data\";\nimport getAuthorizationHeader from \"../getAuthorizationHeader\";\n\nexport async function getStopsOfRoute(city, RouteUID) {\n    return axios({\n            method: 'get',\n            url: `https://ptx.transportdata.tw/MOTC/v2/Bus/StopOfRoute/City/${city}?$filter=RouteUID%20eq%20'${RouteUID}'&$format=JSON`,\n            headers: getAuthorizationHeader()\n        })\n        .then((response) => {\n            return response.data;\n        }).then((data) => {\n            let res = {\n                0: [],\n                1: [],\n                2: [],\n                255: []\n            };\n            data.forEach(item => {\n                res[item.Direction].push(item);\n            });\n            for (let item in res) {\n                res[item] = res[item].sort((a, b) =>\n                    +a.StopSequence < +b.StopSequence ? -1 : 1\n                );\n            }\n            return res;\n        })\n        .catch((error) => console.log(`error: ${stop_city_data[city]}公車站牌資料 `, error))\n\n}","export default __webpack_public_path__ + \"static/media/pin.9bb06f23.svg\";","export default __webpack_public_path__ + \"static/media/directions_bus_filled_24dp.1adceefa.svg\";","export default __webpack_public_path__ + \"static/media/radio_button_checked_black_24dp.9a33b9ed.svg\";","import { useContext, useEffect, useState } from 'react';\nimport { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet'\nimport { BusStationContext, UserLocationContext } from '../../App';\nimport pin from '../../assets/icons/pin.svg';\nimport bus from '../../assets/icons/directions_bus_filled_24dp.svg';\nimport point from '../../assets/icons/radio_button_checked_black_24dp.svg';\nimport { Icon, Polyline } from 'leaflet';\n\nconst pin_icon = new Icon({\n    iconUrl: pin,\n    iconSize: [24, 24],\n    className: 'leaflet-marker-icon pin-icon red'\n});\n\nconst point_icon = new Icon({\n    iconUrl: point,\n    iconSize: [36, 36],\n    className: 'leaflet-marker-icon'\n})\n\n\nfunction PinStop({ stopsOfRoute, direction }) {\n    if (stopsOfRoute[direction] && stopsOfRoute[direction][0]) {\n        return (\n            stopsOfRoute[direction][0].Stops.map((data, ind, arr) =>\n                <div>\n                    <Marker key={data.StopUID} position={[data.StopPosition.PositionLat, data.StopPosition.PositionLon]} icon={point_icon}>\n                        <Popup>\n                            <span>{data.StopName.Zh_tw}</span>\n                        </Popup>\n                    </Marker>\n                </div>\n            )\n        );\n    } else {\n        return null;\n    }\n}\n\nexport default function BusRouteMap({ pinStop, stopsOfRoute, direction }) {\n    const userLocation = useContext(UserLocationContext);\n    const busStation = useContext(BusStationContext);\n    const [map, setMap] = useState(null);\n\n    useEffect(() => {\n        if (map) {\n            if (stopsOfRoute[direction] && stopsOfRoute[direction][0] && stopsOfRoute[direction][0].Stops.length) {\n                const pos = stopsOfRoute[direction][0].Stops[Math.floor(stopsOfRoute[direction][0].Stops.length / 2)].StopPosition;\n                map.setView([pos.PositionLat, pos.PositionLon]);\n            }\n        }\n    }, [map, stopsOfRoute, direction]);\n\n\n    return (\n        <MapContainer center={[22.9977325, 120.2141299]} zoom={15} scrollWheelZoom={false} whenCreated={setMap}>\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <Marker position={[userLocation.latitude, userLocation.longitude]} icon={pin_icon}>\n                <Popup>\n                    <div className=\"pin-here\">你在這裡</div>\n                </Popup>\n            </Marker>\n            <PinStop stopsOfRoute={stopsOfRoute} direction={direction} />\n        </MapContainer>\n    )\n}\n\n\n\n// const map_icon = new Icon({\n//     iconUrl: map,\n//     iconSize: [32, 32],\n//     className: 'leaflet-marker-icon route'\n// })\n\n\n// function getCorners(geometry) {\n//     let top = geometry[0][0], left = geometry[0][1];\n//     let bottom = top, right = left;\n//     for (let geo of geometry) {\n//         if (geo[0] > top) {\n//             top = geo[0];\n//         } else if (geo[0] < bottom) {\n//             bottom = geo[0];\n//         }\n//         if (geo[1] < left) {\n//             left = geo[1];\n//         } else if (geo[1] > right) {\n//             right = geo[1];\n//         }\n//     }\n//     return [[bottom, left], [top, right]];\n// }\n\n// function getCenter(corners) {\n//     return [(corners[0][0] + corners[1][0]) / 2, (corners[0][1] + corners[1][1]) / 2];\n// }\n\n// function getDiameter(corners) {\n//     return Math.pow(Math.pow(corners[0][0] - corners[0][1], 2) + Math.pow(corners[1][0] - corners[1][1], 2), 0.5)\n// }\n\n// const routeOptions = { color: '#51AB5B' }\n\n// export default function RouteMap({ geometry, distance, seeToggle = true }) {\n//     const userLocation = useContext(UserLocation);\n//     const [map, setMap] = useState(null);\n//     const [mode, setMode] = useState(\"borrow\");\n\n//     // api is latitude first then longitude\n//     geometry = geometry.map(item => [item[1], item[0]]);\n//     let geometry_group = [];\n//     let prev＿start = 0;\n//     for (let i = 1; i < geometry.length; ++i) {\n//         if (!geometry[i][0] || !geometry[i][1]) {\n//             geometry_group.push(geometry.slice(prev＿start, i));\n//             ++i;\n//             prev＿start = i + 1;\n//         }\n//     }\n//     geometry_group.push(geometry.slice(prev＿start, geometry.length));\n\n\n\n//     const corners = getCorners(geometry);\n//     // center is center of geometry center and start position\n//     const center = getCenter([getCenter(corners), geometry[0]]);\n//     // const diameter = getDiameter(corners);\n//     const zoom = (\n//         distance <= 500 ? 16 :\n//             distance <= 3000 ? 15 :\n//                 14\n//     )\n//     useEffect(() => {\n//         if (map) {\n//             map.setView(center, zoom);\n//         }\n//     }, [map, center]);\n\n\n//     function handleClick() {\n//         if (mode === 'borrow') {\n//             setMode('return');\n//         } else {\n//             setMode('borrow');\n//         }\n//     }\n\n//     return (\n//         <>\n//             {seeToggle && <BorrowReturnToggle isToggleOn={mode === 'return'} handleClick={handleClick} />}\n//             <MapContainer center={[25.0210905, 121.5353809]} zoom={15} scrollWheelZoom={false} whenCreated={setMap}>\n//                 <TileLayer\n//                     attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n//                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//                 />\n//                 {geometry_group.map((item, ind) => {\n//                     return (\n//                         <Polyline key={ind} pathOptions={routeOptions} positions={item} />\n//                     )\n//                 })}\n//                 {seeToggle && <BikePosition mode={mode} location={geometry[0]} />}\n//                 <Marker position={geometry[0]} icon={map_icon}>\n//                     <Popup>\n//                         起點\n//                     </Popup>\n//                 </Marker>\n//             </MapContainer>\n//         </>\n//     );\n// }","export default __webpack_public_path__ + \"static/media/map.b03c20b2.svg\";","import { useContext, useEffect, useState } from \"react\";\nimport { getStopsOfRoute } from \"../../api/TDX/Bus/BusStop\";\nimport { UserLocationContext } from \"../../App\";\nimport BusRouteMap from \"../Map/BusRouteMap\";\nimport map from '../../assets/icons/map.svg';\n\nconst StopStatus = {\n    0: '正常',\n    1: '未發車',\n    2: '不停靠',\n    3: '末班已過',\n    4: '今未營運'\n}\n\nfunction getEstimatedTimeStr(data) {\n    if (data.StopStatus > 1) {\n        return StopStatus[data.StopStatus];\n    } else if (data.StopStatus === 0 || data.EstimateTime) {\n        const minutes = Math.ceil(data.EstimateTime / 60);\n        if (minutes > 2) {\n            return minutes + ' 分';\n        } else if (minutes === 2) {\n            return \"即將進站\";\n        } else {\n            return \"進站中\";\n        }\n    } else if (data.NextBusTime) {\n        const time = new Date(data.NextBusTime);\n        const h = '0' + time.getHours();\n        const m = '0' + time.getMinutes();\n        return h.slice(h.length - 2) + ':' + m.slice(m.length - 2);\n    } else {\n        return StopStatus[1];\n    }\n}\n\n\nfunction getComingStatus(data) {\n    // 0 normal, 1 coming, 2 gray \n    if (data.StopStatus > 1) {\n        return 2;\n    } else if (data.StopStatus === 0 || data.EstimateTime) {\n        const minutes = Math.ceil(data.EstimateTime / 60);\n        if (minutes <= 2) {\n            return 1;\n        } else {\n            return 0;\n        }\n    } else {\n        return 2;\n    }\n}\n\nfunction EstimatedTimeItem({ data, pinStop, direction }) {\n    const coming_status = getComingStatus(data);\n    useEffect(() => {\n        if (pinStop[direction] === data.StopUID) {\n            let child = document.getElementById(pinStop[direction]);\n            let parent = document.getElementById('timeList');\n            if (child) {\n                parent.scrollTop = child.offsetTop - child.clientHeight * 2;\n                child.style.backgroundColor = \"lightblue\";\n            }\n        }\n    }, [pinStop, direction]);\n    return (\n        <div id={data.StopUID} className={\"flex items-center arrival-time-item \" + (coming_status === 1 && \"bg-gray-100\")}>\n            <div className={\"flex justify-center items-center arrival-time-estimated-time \" + (coming_status === 1 ? \"comming\" : coming_status === 2 ? \"gray\" : \"\")}>\n                <div>{getEstimatedTimeStr(data)}</div>\n            </div>\n            <div className=\" ml-8 arrival-time-stop-name flex justify-between\">\n                {data.StopName.Zh_tw}\n            </div>\n        </div>\n    )\n}\n\n\n// unit: meter\nfunction getDistance(stop, center) {\n    const x = (stop.StopPosition.PositionLon - center.longitude) * 100000;\n    const y = (stop.StopPosition.PositionLat - center.latitude) * 100000;\n    return Math.pow(Math.pow(x, 2) + Math.pow(y, 2), 0.5);\n}\n\nexport default function BusEstimatedTimeList({ estimateData, RouteData }) {\n    const [direction, setDirection] = useState(0);\n    const [pinStop, setPinStop] = useState({});\n    const userLocation = useContext(UserLocationContext);\n    const [stopsOfRoute, setStopsOfRoute] = useState([]);\n    const [hideMap, setHideMap] = useState(true);\n\n    useEffect(() => {\n        if (RouteData) {\n            getStopsOfRoute(RouteData.City, RouteData.RouteUID).then(res => setStopsOfRoute(res));\n        }\n    }, [RouteData])\n\n    useEffect(() => {\n        const distance_bound = 500;\n        let res = {};\n        let distance = 10000;\n        let nearest_stop = \"\";\n\n        stopsOfRoute[0] && stopsOfRoute[0][0] && stopsOfRoute[0][0].Stops.forEach(stop => {\n            const d = getDistance(stop, userLocation);\n            if (d < distance && d < distance_bound) {\n                distance = d;\n                nearest_stop = stop.StopUID;\n            }\n        });\n        res[0] = nearest_stop;\n\n        distance = 10000;\n        nearest_stop = \"\";\n        stopsOfRoute[1] && stopsOfRoute[1][0] && stopsOfRoute[1][0].Stops.forEach(stop => {\n            const d = getDistance(stop, userLocation);\n            if (d < distance && d < distance_bound) {\n                distance = d;\n                nearest_stop = stop.StopUID;\n            }\n        });\n        res[1] = nearest_stop;\n\n        distance = 10000;\n        nearest_stop = \"\";\n        stopsOfRoute[2] && stopsOfRoute[2][0] && stopsOfRoute[2][0].Stops.forEach(stop => {\n            const d = getDistance(stop, userLocation);\n            if (d < distance && d < distance_bound) {\n                distance = d;\n                nearest_stop = stop.StopUID;\n            }\n        });\n        res[2] = nearest_stop;\n\n        setPinStop(res);\n    }\n        , [stopsOfRoute, userLocation]);\n\n\n    return (\n        <div className=\"arrival-time-block h-full flex flex-col\">\n            <div className=\"flex justify-between\">\n                <span></span>\n                <div className=\"flex justify-center items-center tracking-widest mr-1 cursor-pointer py-1\" onClick={() => setHideMap(!hideMap)}>\n                    <img src={map} className=\"h-4 mr-2\"></img>\n                    {hideMap ? \"打開地圖\" : \"收起地圖\"}\n                </div>\n            </div>\n            <div className={`w-full transition-all ` + (hideMap ? 'h-0' : 'h-60 lg:h-96')}>\n                {pinStop && stopsOfRoute && <BusRouteMap stopsOfRoute={stopsOfRoute} direction={direction} data={estimateData} />}\n            </div>\n            <div className=\"flex items-center\">\n                {0 in estimateData && estimateData[0].length > 0 &&\n                    <div className={`flex-1 flex items-center justify-center arrival-time-direction-toggle ` + (direction === 0 ? 'on' : null)} onClick={() => setDirection(0)}>\n                        往&nbsp;<span className=\"font-bold\">{RouteData.DestinationStopNameZh}</span>\n                    </div>\n                }\n                {1 in estimateData && estimateData[1].length > 0 &&\n                    <div className={`flex-1 flex items-center justify-center arrival-time-direction-toggle ` + (direction === 1 ? 'on' : null)} onClick={() => setDirection(1)}>\n                        往&nbsp;<span className=\"font-bold\">{RouteData.DepartureStopNameZh}</span>\n                    </div>\n                }\n                {2 in estimateData && estimateData[2].length > 0 &&\n                    <div className={`flex-1 flex items-center justify-center arrival-time-direction-toggle ` + (direction === 2 ? 'on' : null)} onClick={() => setDirection(2)}>\n                        <span className=\"font-bold\">迴圈</span>\n                    </div>\n                }\n            </div>\n            <div id=\"timeList\" className=\"max-h-screen bg-white shadow-lg   px-4  overflow-auto relative\" style={{ height: \"75vh\" }}>\n                {\n                    direction in estimateData &&\n                    estimateData[direction].map(item => {\n                        return <EstimatedTimeItem key={item.StopSequence} data={item} pinStop={pinStop} direction={direction} />\n                    })\n                }\n            </div>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/west_24dp.77f97c6f.svg\";","export default __webpack_public_path__ + \"static/media/favorite_24dp.53c45348.svg\";","export default __webpack_public_path__ + \"static/media/favorite_border_24dp.e0f3e7ea.svg\";","import { useEffect, useState } from 'react';\nimport favorite_24dp from '../../assets/icons/favorite_24dp.svg'\nimport favorite_border_24dp from '../../assets/icons/favorite_border_24dp.svg'\n\nexport default function LikedBusRoute({ RouteUID, className }) {\n    const [isLike, setIsLike] = useState(false);\n    // check if it is liked or not\n    useEffect(() => {\n        let liked_bus_route_list = JSON.parse(localStorage.getItem(\"liked_bus_route_list\"));\n        if (!liked_bus_route_list) {\n            localStorage.setItem(\"liked_bus_route_list\", JSON.stringify([]));\n            liked_bus_route_list = JSON.parse(localStorage.getItem(\"liked_bus_route_list\"));\n        }\n        setIsLike(liked_bus_route_list.find(uid => uid === RouteUID) ? true : false);\n    }, [RouteUID]);\n    // toggle handle\n    function clickHandle() {\n        if (isLike) {\n            let liked_bus_route_list = JSON.parse(localStorage.getItem(\"liked_bus_route_list\"));\n            const index = liked_bus_route_list.findIndex(uid => uid === RouteUID);\n            if (index !== -1) {\n                liked_bus_route_list.splice(index, 1);\n                localStorage.setItem(\"liked_bus_route_list\", JSON.stringify(liked_bus_route_list));\n            }\n            setIsLike(false);\n        } else {\n            let liked_bus_route_list = JSON.parse(localStorage.getItem(\"liked_bus_route_list\"));\n            const index = liked_bus_route_list.findIndex(uid => uid === RouteUID);\n            if (index === -1) {\n                liked_bus_route_list.push(RouteUID);\n                localStorage.setItem(\"liked_bus_route_list\", JSON.stringify(liked_bus_route_list));\n            }\n            setIsLike(true);\n        }\n    }\n    return <img className={className+ \" p-3 \"} src={isLike ? favorite_24dp : favorite_border_24dp} alt={isLike ? \"已收藏 liked\" : \"收藏他 like\"} onClick={\n        (e) =>{\n        e.preventDefault();\n        clickHandle();\n    } } />;\n}","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { getBusRouteEstimatedArrival } from \"../api/TDX/Bus/EstimatedTimeOfArrival\";\nimport { BusRouteContext } from \"../App\";\nimport BusEstimatedTimeList from \"../components/EstimationOfArrivalTime/BusEstimatedTimeList\";\nimport { DEBUG } from \"../constants/debug\";\n\n\nimport west_24dp from '../assets/icons/west_24dp.svg';\nimport { useHistory } from 'react-router'\nimport LikedBusRoute from \"../components/LocalStorage/LikedBusRoute\";\n\n\n\nfunction BusEstimatedTimeRouteName({ RouteData }) {\n\n    return (\n        <>\n\n            <div className=\"bg-white flex justify-center items-center h-16 px-4\">\n                <span className=\"ml-10\">&nbsp;</span>\n                <div className=\"bus-estimated-time-routename\">\n                    {RouteData.RouteName.Zh_tw}\n                </div>\n                <div>\n                    <LikedBusRoute RouteUID={RouteData.RouteUID} />\n                </div>\n            </div>\n\n        </>\n    );\n}\n\n\nexport default function BusEstimatedTime() {\n    const busRoute = useContext(BusRouteContext);\n    const RouteUID = useParams()['RouteUID'];\n    const RouteData = busRoute.find(route => route.RouteUID === RouteUID);\n    const [busEstimatedData, setBusEstimatedData] = useState([]);\n    const [updateTime, setUpdateTime] = useState(0);\n    let history = useHistory();\n\n    // tick\n    const tick = useCallback(() => {\n        if (updateTime > 0) {\n            setUpdateTime(updateTime - 1);\n        }\n    }, [updateTime]);\n\n    useEffect(() => {\n        let periodic_action = setInterval(tick, 1000);\n        return () => {\n            clearInterval(periodic_action);\n        }\n    }, [tick]);\n\n    // Update bus estimated arrival time data\n    useEffect(() => {\n        if (updateTime === 0 && RouteData) {\n            DEBUG && console.log('fetch bus estimated arrival time data');\n            getBusRouteEstimatedArrival(RouteData.City, RouteData.RouteUID)\n                .then(res => {\n                    setBusEstimatedData(res);\n                })\n                .then(\n                    () => setUpdateTime(10)\n                )\n                .then(() => {\n                    DEBUG && console.log('Bus estimated arrival time data', busEstimatedData);\n                })\n        }\n    }, [updateTime, RouteData, busEstimatedData]);\n\n    return (\n        <div className=\"h-full flex flex-col\">\n            <div className=\"bg-white view-border pt-4 flex pl-1\" onClick={() => history.goBack()} style={{ cursor: \"pointer\" }}>\n                <img src={west_24dp} alt='回上一頁 back to previous page' />\n                <span className=\"ml-2\">返回搜尋</span>\n            </div>\n            {RouteData && <BusEstimatedTimeRouteName RouteData={RouteData} />}\n            <div className=\"bg-white tracking-widest sticky top-0 z-10\">\n                <div className=\" text-right lg:text-center py-1\">{updateTime}秒後更新</div>\n            </div>\n            <div className=\"view-border lg:pb-10 h-full flex flex-col\">\n                {busEstimatedData ? <BusEstimatedTimeList estimateData={busEstimatedData} RouteData={RouteData} /> : <p className=\"w-1/2\">出問題了！請重新再試一次。</p>}\n            </div>\n        </div>\n    );\n}","class TrieNode {\n    constructor() {\n        this.indices = [];\n        this.children = {};\n    }\n    getAllIndices() {\n        let cur = this;\n        let res = [...cur.indices];\n        if (Object.entries(cur.children).length > 0) {\n            Object.values(cur.children).forEach(node => {\n                res.push(...node.getAllIndices());\n            })\n        }\n        return res;\n    }\n}\n\nexport class Trie {\n    constructor() {\n        this.root = new TrieNode();\n    }\n    insert(word, ind) {\n        let cur = this.root;\n        for (let i = 0; i < word.length; ++i) {\n            if (!cur.children[word[i]]) {\n                cur.children[word[i]] = new TrieNode();\n            }\n            cur = cur.children[word[i]];\n            if (i === word.length - 1) {\n                cur.indices.push(ind);\n            }\n        }\n    }\n    findAllIndices(prefix) {\n        let cur = this.root;\n        let res = [];\n        for (let i = 0; i < prefix.length; ++i) {\n            if (cur.children[prefix[i]]) {\n                cur = cur.children[prefix[i]];\n            } else {\n                return res;\n            }\n        }\n        return cur.getAllIndices();\n    }\n}","import axios from \"axios\";\nimport {\n    Trie\n} from \"../../../constants/Trie\";\nimport {\n    route_city_data\n} from \"../city_data\";\nimport getAuthorizationHeader from \"../getAuthorizationHeader\";\n\n\nconst DEBUG = process.env.REACT_APP_DEBUG === '1';\n\n\nconst BusRouteType = {\n    11: '市區公車',\n    12: '公路客運',\n    13: '國道客運',\n    14: '接駁車'\n};\n\n\nasync function getBusCityRoute(city) {\n    return axios({\n            method: 'get',\n            url: `https://ptx.transportdata.tw/MOTC/v2/Bus/Route/City/${city}?$format=JSON`,\n            headers: getAuthorizationHeader()\n        })\n        .then((response) => {\n            DEBUG && console.log(`${route_city_data[city]}公車路線資料`, response);\n            return response.data;\n        })\n        .catch((error) => console.log(`error: ${route_city_data[city]}公車路線資料 `, error))\n}\n\nexport async function getAllBusCityRoute() {\n    let promise_arr = [];\n    Object.keys(route_city_data).forEach(city => {\n        promise_arr.push(getBusCityRoute(city));\n    });\n    let data_arr = [];\n    return Promise.all(promise_arr)\n        .then(items => items.forEach(item => data_arr.push(...item)))\n        .then(() => data_arr)\n        .catch((e) => {\n            console.log('error: getAllBusCityRoute() ', e);\n        });\n}\n\n\nexport function getBusRouteTrie(bus_route) {\n    let t = new Trie();\n    bus_route.forEach((route, ind) => {\n        route.RouteName.Zh_tw && t.insert(route.RouteName.Zh_tw, ind);\n        if (route.RouteName.En && route.RouteName.En !== route.RouteName.Zh_tw) {\n            t.insert(route.RouteName.En, ind)\n        }\n    });\n    return t;\n}","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { route_city_data } from '../../api/TDX/city_data';\nimport LikedBusRoute from '../LocalStorage/LikedBusRoute';\nexport default function BusRouteSearchList({ route_list }) {\n    const [city, setCity] = useState(\"\");\n    return (\n        <>\n            <div className=\"flex justify-between mx-4\">\n                <span></span>\n                <select onChange={(e) => setCity(e.target.value)}>\n                    <option value=\"\">全縣市</option>\n                    {Object.entries(route_city_data).map(city => (\n                        <option key={city[0]} value={city[0]}>{city[1]}</option>\n                    ))}\n                </select>\n            </div>\n            <div className=\"max-h-screen overflow-y-auto shadow-lg \" style={{ height: \"75vh\" }}>\n                {\n                    route_list.filter(data => {\n                        if (city === \"\" || data.City === city) {\n                            return data;\n                        }\n                    }).map((data, ind) => {\n                        return (\n                            <Link key={data.RouteUID} to={`/bus_estimated_time/${data.RouteUID}`}>\n                                <div className=\"route-search-item\">\n                                    <div>\n                                        <span className=\"route-name\">{data.RouteName.Zh_tw}</span>\n                                        <span className=\"route-city\">（{route_city_data[data.City]}）</span>\n                                        <br />\n                                        <span className=\"route-depart-dest\">{data.DepartureStopNameZh}-{data.DestinationStopNameZh}</span>\n                                    </div>\n                                    <LikedBusRoute RouteUID={data.RouteUID} />\n                                </div>\n                            </Link>\n                        )\n                    })\n                }\n            </div>\n        </>\n    );\n}","export default __webpack_public_path__ + \"static/media/search_black_24dp.b56cb96d.svg\";","import { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { getBusRouteTrie } from \"../api/TDX/Bus/BusRoute\";\nimport { BusRouteContext } from \"../App\";\nimport BusRouteSearchList from \"../components/Search/BusRouteSearchList\";\nimport { Trie } from \"../constants/Trie\";\nimport west_24dp from '../assets/icons/west_24dp.svg';\nimport search_black_24dp from '../assets/icons/search_black_24dp.svg';\n\n\nfunction FindBusRouteInput({ inputHandle }) {\n\n    return (\n        <div className=\"flex justify-center items-center\">\n            <div className=\"input-window flex justify-center items-center \">\n                <img src={search_black_24dp} className=\"lookup\" alt=\"尋找路線 serach icon\" />\n                <input className=\"input\" placeholder=\"請輸入公車路線或號碼\" autoComplete=\"off\" onChange={e => inputHandle(e.target.value)}></input>\n            </div>\n        </div>\n    );\n}\n\nexport default function FindBusRoute() {\n    const busRoute = useContext(BusRouteContext);\n    const history = useHistory();\n    const [inputContent, setInputContent] = useState(\"\");\n    const [routeList, setRouteList] = useState([]);\n    const [busRouteTrie, setBusRouteTrie] = useState(new Trie());\n    function getInputContent(content) {\n        setInputContent(content);\n    }\n\n    //Build Trie for keyword selection\n    useEffect(() => {\n        if (busRoute) {\n            setBusRouteTrie(getBusRouteTrie(busRoute))\n        }\n    }, [busRoute]);\n\n    //Get candidates of route\n    useEffect(() => {\n        if (inputContent.length > 0) {\n            setRouteList(busRouteTrie.findAllIndices(inputContent).sort().filter(\n                (item, ind, arr) => ind === 0 || arr[ind - 1] !== arr[ind]).map(item_ind => busRoute[item_ind])\n                // sort for keyword selection\n                .sort((route1, route2) => {\n                    return (route1.RouteName.Zh_tw.length < route2.RouteName.Zh_tw.length ? -1 : 1)\n                })\n            );\n        } else {\n            setRouteList(busRoute.slice(0, 10));\n        }\n    }, [inputContent, busRouteTrie, busRoute]);\n\n    return (\n        <section className=\"bg-white pt-4 lg:pb-10  \">\n            <div className=\"view-border\">\n                <div className=\"bg-white flex pl-1\" onClick={() => history.goBack()} style={{ cursor: \"pointer\" }}>\n                    <img src={west_24dp} alt='回上一頁 back to previous page' />\n                    <span className=\"ml-2\">返回首頁</span>\n                </div>\n                <FindBusRouteInput inputHandle={getInputContent} />\n                <BusRouteSearchList route_list={routeList} />\n            </div>\n        </section>\n    );\n\n}","import axios from \"axios\";\nimport {\n    Trie\n} from \"../../../constants/Trie\";\nimport {\n    city_data,\n    stop_city_data\n} from \"../city_data\";\nimport getAuthorizationHeader from \"../getAuthorizationHeader\";\n\n\nconst DEBUG = process.env.REACT_APP_DEBUG === '1';\n\n// Bus station data\n// {\n//     City,\n//     StationUID,\n//     StationName,\n//     StationEnName,\n//     StationPosition,\n//     StationAddress,\n//     Stops,\n// }\n\n// StationPosition: {\n//     PositionLat,\n//     PositionLon\n// }\n\n// Stops:[\n//     {\n//         StopUID\n//         RouteUID\n//     }\n// ]\n\nasync function getBusCityStation(city) {\n    return axios({\n            method: 'get',\n            url: `https://ptx.transportdata.tw/MOTC/v2/Bus/Station/City/${city}?$format=JSON`,\n            headers: getAuthorizationHeader()\n        })\n        .then((response) => {\n            DEBUG && console.log(`${city_data[city]}公車站位資料`, response);\n            let datas = response.data;\n            // Extract necessary attributes\n            datas = datas.map(data => {\n                data.StationEnName = data.Stops[0].StopName.En;\n                data.Stops = data.Stops.map(stop => {\n                    return {\n                        StopUID: stop.StopUID,\n                        RouteUID: stop.RouteUID,\n                        // RouteName: stop.RouteName.Zh_tw,\n                        // RouteEnName: stop.RouteName.En,\n                    }\n                })\n                return {\n                    City: city,\n                    StationUID: data.StationUID,\n                    StationName: data.StationName.Zh_tw,\n                    StationEnName: data.StationEnName,\n                    StationPosition: data.StationPosition,\n                    StationAddress: data.StationAddress,\n                    Stops: data.Stops\n                };\n            });\n            return datas;\n        })\n        .catch((error) => console.log(`error: ${city_data[city]}公車站位資料 `, error))\n}\n\nexport async function getAllBusCityStation() {\n    let promise_arr = [];\n    Object.keys(city_data).forEach(city => {\n        promise_arr.push(getBusCityStation(city));\n    });\n    let datas = [];\n    return Promise.all(promise_arr)\n        .then(items => items.forEach(item => datas.push(...item)))\n        // get city stop-to-station data which has no station data\n        // however it is a bit large\n        // .then(datas => {\n        //     let promise_arr = [];\n        //     Object.keys(stop_city_data).filter(city=>city_data[city]!==stop_city_data[city]).forEach(\n        //         city=>{\n        //             DEBUG && console.log('no station data city: ' ,city);\n        //             promise_arr.push(getBusCityStopToStation(city)); \n        //         }\n        //     ) \n        //     return Promise.all(promise_arr)\n        //         .then(items => items.forEach(item => datas.push(...item)))\n        //         .then(() => datas)\n        // })\n        .then(() => {\n            // For binary Search for position\n            datas=datas.sort(function (a, b) {\n                if (a.StationPosition.PositionLon < b.StationPosition.PositionLon) {\n                    return -1;\n                    // } else if (a.StationPosition.PositionLon === b.StationPosition.PositionLon) {\n                    //     return a.StationPosition.PositionLat < b.StationPosition.PositionLLat\n                } else {\n                    return 1;\n                }\n            });\n            return datas;\n        })\n        .catch((e) => {\n            console.log('error: getAllBusCityStation() ', e);\n        });\n}\n\nfunction binarySearchLon(bus_station, goal_lon, left, right) {\n    while (left < right) {\n        const mid = Math.floor(left + (right - left) / 2);\n        if (bus_station[mid].StationPosition.PositionLon < goal_lon) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n    return left;\n}\n\n// unit: meter\nfunction distance(station, center) {\n    const x = (station.StationPosition.PositionLon - center.longitude) * 100000;\n    const y = (station.StationPosition.PositionLat - center.latitude) * 100000;\n    return Math.pow(Math.pow(x, 2) + Math.pow(y, 2), 0.5);\n}\n// radius unit: meter\nexport function getNearByBusStation(bus_station, center, radius = 500) {\n    if (bus_station.length === 0) {\n        return [];\n    }\n    // 0.01 longitude or latitude is approximate 1 kilometer.\n    const adjusted_radius = radius / 100000;\n    const right_index = binarySearchLon(bus_station, center.longitude + adjusted_radius, 0, bus_station.length);\n    const left_index = binarySearchLon(bus_station, center.longitude - adjusted_radius, 0, right_index);\n    let res = [];\n    for (let i = left_index; i < right_index; ++i) {\n        if (distance(bus_station[i], center) < radius) {\n            res.push(bus_station[i]);\n        }\n    }\n    return res;\n\n}\n\nexport function getBusStationTrie(bus_station) {\n    let t = new Trie();\n    bus_station.forEach((station, ind) => {\n        station.StationName && t.insert(station.StationName, ind);\n        if (station.StationEnName && station.StationEnName !== station.StationName) {\n            t.insert(station.StationEnName, ind)\n        }\n    });\n    return t;\n}\n\n\nasync function getBusCityStopToStation(city) {\n    return axios({\n            method: 'get',\n            url: `https://ptx.transportdata.tw/MOTC/v2/Bus/Stop/City/${city}?$format=JSON`,\n            headers: getAuthorizationHeader()\n        })\n        .then((response) => {\n            return response.data;\n        })\n        .then(res => {\n            res = res.map(stop => {\n                return {\n                    City: stop.City,\n                    StationUID: stop.StopUID,\n                    StationName: stop.StopName.Zh_tw,\n                    StationEnName: stop.StopName.En,\n                    StationPosition: stop.StopPosition,\n                    Stops: [{\n                        StopUID: stop.StopUID,\n                    }],\n                };\n            });\n            return res;\n        })\n        .catch((error) => console.log(`error: ${stop_city_data[city]}公車站牌資料 `, error))\n\n}","import { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { city_data } from '../../api/TDX/city_data';\nimport { BusRouteContext } from '../../App';\nexport default function BusStationSearchList({ station_list }) {\n    const busRoute = useContext(BusRouteContext);\n    const [city, setCity] = useState(\"\");\n    return (\n        <>\n            <div className=\"flex justify-between mx-4\">\n                <span></span>\n                <select onChange={(e) => setCity(e.target.value)}>\n                    <option value=\"\">全縣市</option>\n                    {Object.entries(city_data).map(city => (\n                        <option key={city[0]} value={city[0]}>{city[1]}</option>\n                    ))}\n                </select>\n            </div>\n            <div className=\"max-h-screen overflow-y-auto shadow-lg \" style={{height:\"75vh\"}}>\n            {\n                station_list.filter(data => {\n                    if (city === \"\" || data.City === city) {\n                        return data;\n                    }\n                }).map(data => {\n                    return (\n                        <div key={data.StationUID} className=\"station-search-item\">\n                            <span className=\"station-name\">{data.StationName}</span><span className=\"station-city\">（{city_data[data.City]}）</span>\n                            <span className=\"station-address\">{data.StationAddress}</span>\n                            <br />\n                            <span>站點路線：</span>\n                            <div className=\"flex flex-wrap\">\n                                {data.Stops.map(data => (\n                                    <Link key={data.RouteUID} to={`/bus_estimated_time/${data.RouteUID}`}>\n                                        <span className=\"pin-icon-route-name\">{busRoute.find(route => route.RouteUID === data.RouteUID).RouteName.Zh_tw}</span>\n                                    </Link>\n                                ))}\n                            </div>\n                        </div>\n                    )\n                })\n            }\n            </div>\n        </>\n    );\n}","import { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { getBusStationTrie, getNearByBusStation } from \"../api/TDX/Bus/BusStation\";\nimport { BusStationContext, UserLocationContext } from \"../App\";\nimport BusStationSearchList from \"../components/Search/BusStationSearchList\";\nimport { Trie } from \"../constants/Trie\";\nimport west_24dp from '../assets/icons/west_24dp.svg';\nimport search_black_24dp from '../assets/icons/search_black_24dp.svg';\nimport { DEBUG } from \"../constants/debug\";\n\n\nfunction FindBusStationInput({ inputHandle }) {\n\n    return (\n        <div className=\"flex justify-center items-center\">\n            <div className=\"input-window flex justify-center items-center \">\n                <img src={search_black_24dp} className=\"lookup\" alt=\"尋找路線 serach icon\" />\n                <input className=\"input\" placeholder=\"請輸入站點名稱\" autoComplete=\"off\" onChange={e => inputHandle(e.target.value)}></input>\n            </div>\n        </div>\n    );\n}\n\nexport default function FindBusStation() {\n    const busStation = useContext(BusStationContext);\n    const history = useHistory();\n    const [inputContent, setInputContent] = useState(\"\");\n    const [stationList, setStationList] = useState([]);\n    const [busStationTrie, setBusStationTrie] = useState(new Trie());\n\n    const userLocation = useContext(UserLocationContext);\n    const [nearByBusStation, setNearByBusStation] = useState([]);\n\n    useEffect(() => {\n        setNearByBusStation(getNearByBusStation(busStation, userLocation));\n    }, [busStation, userLocation]);\n\n    function getInputContent(content) {\n        setInputContent(content);\n    }\n\n    //Build Trie for keyword selection\n    useEffect(() => {\n        if (busStation) {\n            setBusStationTrie(getBusStationTrie(busStation))\n        }\n    }, [busStation]);\n\n    //Get candidates of station\n    useEffect(() => {\n        if (inputContent.length > 0) {\n            setStationList(busStationTrie.findAllIndices(inputContent).sort().filter(\n                (item, ind, arr) => ind === 0 || arr[ind - 1] !== arr[ind]).map(item_ind => busStation[item_ind])\n                // sort for keyword selection\n                .sort((station1, station2) => {\n                    return (station1.StationName.length < station2.StationName.length ? -1 : 1)\n                })\n            );\n        } else if (nearByBusStation.length > 0) {\n            console.log(nearByBusStation)\n            setStationList(nearByBusStation);\n        } else {\n            const pick = Math.floor(busStation.length / 2);\n            setStationList(busStation.slice(pick, pick + 10));\n        }\n        DEBUG && console.log(stationList)\n    }, [inputContent, busStationTrie, busStation]);\n\n    // test busStationTrie.findAllIndices('307').forEach(item => console.log(busStation[item]));\n\n    return (\n        <section className=\"bg-white  pt-4 lg:pb-10 h-full\">\n            <div className=\"view-border h-full flex flex-col\">\n                <div className=\"bg-white flex pl-1\" onClick={() => history.goBack()} style={{ cursor: \"pointer\" }}>\n                    <img src={west_24dp} alt='回上一頁 back to previous page' />\n                    <span className=\"ml-2\">返回首頁</span>\n                </div>\n                <FindBusStationInput inputHandle={getInputContent} />\n                <BusStationSearchList station_list={stationList} />\n            </div>\n        </section>\n    );\n\n}\n","export default __webpack_public_path__ + \"static/media/bus_c1.01261033.svg\";","export default __webpack_public_path__ + \"static/media/bus_c2.3a493e43.svg\";","export default __webpack_public_path__ + \"static/media/bus_c4.94f6594e.svg\";","export default __webpack_public_path__ + \"static/media/bus_c3.8737ceaf.svg\";","export default __webpack_public_path__ + \"static/media/bus_c5.475883a6.svg\";","export default function Banner() {\n    return (\n        <div className=\"banner\">\n            <article className=\"article\">\n                <h1 className=\"mt-12\">台灣公車動態</h1>\n                <p className=\"mt-4 text-gray-200\">時刻查詢系統</p>\n                <p className=\"mt-5 text-gray-400 tracking-normal text-xs lg:text-sm\">TAIWAN BUS+</p>\n            </article>\n        </div>\n    )\n}","import { useContext, useEffect, useState } from 'react';\nimport { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet'\nimport { BusRouteContext, BusStationContext, UserLocationContext } from '../../App';\nimport pin from '../../assets/icons/pin.svg';\nimport bus from '../../assets/icons/directions_bus_filled_24dp.svg';\n\nimport { Icon } from 'leaflet';\nimport { getNearByBusStation } from '../../api/TDX/Bus/BusStation';\nimport { DEBUG } from '../../constants/debug';\nimport { Link } from 'react-router-dom';\n\nconst pin_icon = new Icon({\n    iconUrl: pin,\n    iconSize: [24, 24],\n    className: 'leaflet-marker-icon pin-icon red'\n});\n\nconst bus_icon = new Icon({\n    iconUrl: bus,\n    iconSize: [36, 36],\n    className: 'leaflet-marker-icon'\n})\n\n\n\n// Bus station data\n// {\n//     City,\n//     StationUID,\n//     StationName,\n//     StationEnName,\n//     StationPosition,\n//     StationAddress,\n//     Stops,\n// }\n\n// StationPosition: {\n//     PositionLat,\n//     PositionLon\n// }\n\n// Stops:[\n//     {\n//         StopUID\n//         RouteUID\n//     }\n// ]\n\nfunction PinNearByBusStationPosition({ nearByBusStation }) {\n    const busRoute = useContext(BusRouteContext);\n    return (\n        nearByBusStation.map(station => {\n            return (\n                <Marker key={station.StationUID} position={[station.StationPosition.PositionLat, station.StationPosition.PositionLon]} icon={bus_icon}>\n                    <Popup>\n                        <span className=\"pin-icon-station-name\">{station.StationName}</span><br />\n                        <span className=\"pin-icon-station-address\">{station.StationAddress}</span><br />\n                        {station.Stops.map((stop, ind) => (\n                            <Link key={stop.RouteUID} to={`/bus_estimated_time/${stop.RouteUID}`}>\n                                <span className=\"pin-icon-route-name\">{busRoute.find(route => route.RouteUID === stop.RouteUID).RouteName.Zh_tw}</span>\n                            </Link>\n                        ))}\n                    </Popup>\n                </Marker>\n            )\n        })\n    );\n}\n\n\nexport default function NearByBusStationMap() {\n    const userLocation = useContext(UserLocationContext);\n    const busStation = useContext(BusStationContext);\n    const [map, setMap] = useState(null);\n    const [nearByBusStation, setNearByBusStation] = useState([]);\n    useEffect(() => {\n        if (map) {\n            map.setView([userLocation.latitude, userLocation.longitude]);\n        }\n    }, [map, userLocation]);\n    useEffect(() => {\n        setNearByBusStation(getNearByBusStation(busStation, userLocation));\n    }, [busStation, userLocation]);\n\n    DEBUG && console.log('near by bus station', getNearByBusStation(busStation, userLocation));\n\n    return (\n        <MapContainer center={[22.9977325, 120.2141299]} zoom={16} scrollWheelZoom={false} whenCreated={setMap}>\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <Marker position={[userLocation.latitude, userLocation.longitude]} icon={pin_icon}>\n                <Popup>\n                    <div className=\"pin-here\">你在這裡</div>\n                    附近有<span className=\"text-blue-800 font-bold mx-1\">{nearByBusStation.length}</span>個站點\n                </Popup>\n            </Marker>\n            <PinNearByBusStationPosition nearByBusStation={nearByBusStation} />\n        </MapContainer>\n    )\n}","import BusEstimatedTime from \"../pages/BusEstimatedTime\";\nimport FindBusRoute from \"../pages/FindBusRoute\";\nimport FindBusStation from \"../pages/FindBusStation\";\nimport Home from \"../pages/Home\";\nimport LikedList from \"../pages/LikedList\";\nimport NearByBusStation from \"../pages/NearByBusStation\";\n\nconst routes = [{\n    path: '/',\n    exact: true,\n    component: Home,\n}\n, \n{\n    path: '/find_bus_route/',\n    exact: false,\n    component: FindBusRoute,\n}, {\n    path: '/bus_estimated_time/:RouteUID',\n    exact: false,\n    component: BusEstimatedTime,\n}, {\n    path: '/near_by_bus_station/',\n    exact: false,\n    component: NearByBusStation,\n},{\n    path:'/find_bus_station/',\n    exact: false,\n    component: FindBusStation,\n},{\n    path:'/liked_list/',\n    exact: false,\n    component: LikedList,\n}\n];\n\nexport default routes;","import { NavLink } from \"react-router-dom\";\nimport bus_c1 from '../assets/icons/bus_c1.svg';\nimport bus_c2 from '../assets/icons/bus_c2.svg';\nimport bus_c3 from '../assets/icons/bus_c3.svg';\nimport bus_c4 from '../assets/icons/bus_c4.svg';\nimport bus_c5 from '../assets/icons/bus_c5.svg';\nimport Banner from \"../components/Banner/Banner\";\n\n\nexport default function Home() {\n    return (\n        <div>\n            <Banner/>\n            <section className=\"view-border h-full lg:flex justify-between\">\n                <NavLink to='/find_bus_route/'>\n                    <div className=\"home-btn\">\n                        <img src={bus_c1} alt='公車圖案' />\n                        <span className=\"c1 ml-2\">尋找路線</span>\n                    </div>\n                </NavLink>\n                <NavLink to='/near_by_bus_station/'>\n                    <div className=\"home-btn\">\n                        <img src={bus_c5} alt='公車圖案' />\n                        <span className=\"c5 ml-2\">附近站點</span>\n                    </div>\n                </NavLink>\n                <NavLink to='/find_bus_station/'>\n                    <div className=\"home-btn\">\n                        <img src={bus_c2} alt='公車圖案' />\n                        <span className=\"c2 ml-2\">站點查詢</span>\n                    </div>\n                </NavLink>\n                <NavLink to='/liked_list/'>\n                    <div className=\"home-btn\">\n                        <img src={bus_c4} alt='公車圖案' />\n                        <span className=\"c4 ml-2\">收藏清單</span>\n                    </div>\n                </NavLink>\n\n            </section>\n        </div>\n    )\n}","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport NearByBusStationMap from \"../components/Map/NearByBusStationMap\";\n\nimport west_24dp from '../assets/icons/west_24dp.svg';\n\nexport default function NearByBusStation() {\n\n    const history = useHistory();\n    return (\n        <section className=\"h-full\">\n            <div >\n                <div className=\" view-border pt-2 flex pl-1\" onClick={() => history.goBack()} style={{ cursor: \"pointer\" }}>\n                    <img src={west_24dp} alt='回上一頁 back to previous page' />\n                    <span className=\"ml-2\">返回首頁</span>\n                </div>\n                <div className=\"  flex justify-center items-center h-20\">\n                    <div className=\"bus-stationname\">\n                        附近的公車站點\n                    </div>\n                </div>\n            </div>\n            <div className=\"\">\n                <div className=\"w-screen  max-w-full lg:shadow-lg\" style={{height:\"70vh\"}} >\n                    <NearByBusStationMap />\n                </div>\n            </div>\n        </section>\n    );\n\n}","import { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { BusRouteContext } from \"../App\";\nimport west_24dp from '../assets/icons/west_24dp.svg';\nimport BusRouteSearchList from \"../components/Search/BusRouteSearchList\";\n\nexport default function LikedList() {\n    const busRoute = useContext(BusRouteContext);\n    const history = useHistory();\n    const [data, setData] = useState([]);\n    const likedRouteList = busRoute.length ? JSON.parse(localStorage.getItem(\"liked_bus_route_list\")).map(RouteUID => busRoute.find(route => route.RouteUID === RouteUID)) : [];\n    return (\n        <section className=\"bg-white  pt-4 lg:pb-10 h-full\">\n            <div className=\"view-border h-full flex flex-col\">\n                <div className=\"bg-white flex pl-1\" onClick={() => history.goBack()} style={{ cursor: \"pointer\" }}>\n                    <img src={west_24dp} alt='回上一頁 back to previous page' />\n                    <span className=\"ml-2\">返回首頁</span>\n                </div>\n                <div className=\"max-h-screen overflow-y-auto shadow-lg \" style={{ height: \"75vh\" }}>\n                    {likedRouteList && likedRouteList.length > 0 && <BusRouteSearchList route_list={likedRouteList} />}\n                </div>\n            </div>\n        </section>\n    )\n}","export function getExpireTime(milliseconds) {\n    const expire_time = new Date();\n    const shift = expire_time.getTime() + milliseconds;\n    expire_time.setTime(shift);\n    return expire_time.toUTCString();\n}","import { getAllBusCityStation } from \"../../api/TDX/Bus/BusStation\";\nimport LZString from \"lz-string\";\nimport { DEBUG } from \"../../constants/debug\";\nimport { useEffect, useState } from \"react\";\nimport { getExpireTime } from \"./util\";\n\n\nexport default function StoreBusStation({ setBusStation }) {\n    const [loading, setLoading] = useState(true);\n    useEffect(() => {\n        const saved_bus_station = JSON.parse(localStorage.getItem(\"bus_station\") && LZString.decompressFromBase64(localStorage.getItem(\"bus_station\")));\n        if (!saved_bus_station || !saved_bus_station.data || new Date().getTime() > new Date(saved_bus_station.expire_time)) {\n            DEBUG && console.log('restore bus_station');\n            getAllBusCityStation()\n                .then(res => {\n                    setBusStation && setBusStation(res);\n                    localStorage.setItem(\"bus_station\", LZString.compressToBase64(JSON.stringify({\n                        data: res,\n                        expire_time: getExpireTime(24 * 3600 * 1000)\n                    })));\n                })\n                .then(() => {\n                    setLoading(false);\n                });\n        } else {\n            DEBUG && console.log('current bus_station size:', localStorage.getItem(\"bus_station\").length / 1024 / 1024, 'MB');\n            DEBUG && console.log(`bus_staion expire_time: ${saved_bus_station.expire_time}`);\n            setBusStation && setBusStation(saved_bus_station.data);\n            setLoading(false);\n        }\n    }, [setBusStation]);\n\n\n    return (loading &&\n        <div className=\"bg-white opacity-90 z-50 w-full h-full fixed flex items-center justify-center\">\n            <p className=\"text-center\">資料更新中…</p>\n        </div>\n    );\n\n}","import { useEffect, useState } from \"react\";\nimport { DEBUG } from \"../../constants/debug\";\n\nfunction getLocation(setUserLocation, prevLocation, setPrevLocation) {\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n            function (position) {\n                if (needUpdate(prevLocation, position.coords)) {\n                    setUserLocation(position.coords);\n                    setPrevLocation(position.coords);\n                } else {\n                    DEBUG && console.log(\"UserLocation: Do not need update.\")\n                }\n            },\n            function (e) {\n                const msg = e.code;\n                const dd = e.message;\n                console.error(msg)\n                console.error(dd)\n            }\n        )\n    }\n}\n\n// update when distance is over 5m.\nfunction needUpdate(prevLocation, currentLocation) {\n    const x = (currentLocation.longitude - prevLocation.longitude) * 100000;\n    const y = (currentLocation.latitude - prevLocation.latitude) * 100000;\n    return Math.pow(x, 2) + Math.pow(y, 2) > 25;\n}\n\nexport default function PosUserLocation({ setUserLocation, period = 30 }) {\n    const [prevLocation, setPrevLocation] = useState({ longitude: 0, latitude: 0 });\n    useEffect(() => {\n        getLocation(setUserLocation, prevLocation, setPrevLocation);\n        let periodic_action = setInterval(() => {\n            getLocation(setUserLocation, prevLocation, setPrevLocation);\n        }, period * 1000);\n        return () => {\n            clearInterval(periodic_action);\n        };\n    }, [setUserLocation, period, prevLocation]);\n    return null;\n}","import LZString from \"lz-string\";\nimport { DEBUG } from \"../../constants/debug\";\nimport { useEffect } from \"react\";\nimport { getAllBusCityRoute } from \"../../api/TDX/Bus/BusRoute\";\nimport { getExpireTime } from \"./util\";\n\n\n\nexport default function StoreBusRoute({ setBusRoute }) {\n    useEffect(() => {\n        const saved_bus_route = JSON.parse(localStorage.getItem(\"bus_route\") && LZString.decompressFromBase64(localStorage.getItem(\"bus_route\")));\n        if (!saved_bus_route || !saved_bus_route.data || new Date().getTime() > new Date(saved_bus_route.expire_time)) {\n            DEBUG && console.log('restore bus_route');\n            getAllBusCityRoute()\n                .then(res => {\n                    setBusRoute && setBusRoute(res);\n                    localStorage.setItem(\"bus_route\", LZString.compressToBase64(JSON.stringify({\n                        data: res,\n                        expire_time: getExpireTime(24 * 3600 * 1000)\n                    })));\n                })\n        } else {\n            DEBUG && console.log('current bus_route size:', localStorage.getItem(\"bus_route\").length / 1024 / 1024, 'MB');\n            DEBUG && console.log(`bus_staion expire_time: ${saved_bus_route.expire_time}`);\n            setBusRoute && setBusRoute(saved_bus_route.data);\n        }\n    }, [setBusRoute]);\n\n\n    return null;\n}","export default __webpack_public_path__ + \"static/media/logo.606790e7.svg\";","import { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport logo from '../../assets/icons/logo.svg';\nimport { Pivot as Hamburger } from 'hamburger-react'\n\nexport default function Header() {\n    const [isOpen, setOpen] = useState(false);\n    return (\n        <>\n            <div className=\"header \">\n                <NavLink to=\"/\">\n                    <img src={logo} alt=\"logo\" />\n                </NavLink>\n                <div>\n                    <Hamburger size={20} toggled={isOpen} toggle={setOpen} />\n                </div>\n            </div>\n            <HamburgerMenu isOpen={isOpen} setOpen={setOpen} />\n        </>\n    );\n}\n\nfunction HamburgerMenu({ isOpen, setOpen }) {\n    if (isOpen) {\n        return (\n            <ul className=\"fixed  bg-white shadow-lg top-16 right-0 px-8 lg:hidden z-30\" onClick={() => setOpen(false)}>\n                <li className='mt-5 mb-5 '>\n                    <NavLink to='/find_bus_route/' className='header-nav-btn'>\n                        尋找路線\n                    </NavLink>\n                </li>\n                <li className='mb-5'>\n                    <NavLink to='/near_by_bus_station/' className='header-nav-btn'>\n                        附近站點\n                    </NavLink>\n                </li>\n                <li className='mb-5'>\n                    <NavLink to='/find_bus_station/' className='header-nav-btn'>\n                        站點查詢\n                    </NavLink>\n                </li>\n                <li className='mb-5'>\n                    <NavLink to='/liked_list/' className='header-nav-btn'>\n                        收藏清單\n                    </NavLink>\n                </li>\n            </ul>\n\n        );\n    } else {\n        return <span></span>;\n    }\n}\n","export default function Footer() {\n    return (\n        <div className=\"mt-auto bg-gray-700 flex justify-center items-center h-8 lg:h-16 flex-grow-0 flex-shrink-0 \">\n            <span className=\"text-xs text-white\">Copyright © 2021 台灣公車 e 點通 &amp; Z.M. All rights reserved.</span>\n        </div>\n    )\n}","import { renderRoutes } from 'react-router-config';\nimport routes from './router';\nimport './assets/styles/index.scss';\nimport StoreBusStation from './components/LocalStorage/StoreBusStation';\nimport { createContext, useContext, useState } from 'react';\nimport PosUserLocation from './components/Location/PosUserLocation';\nimport StoreBusRoute from './components/LocalStorage/StoreBusRoute';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\n\n\nexport const BusStationContext = createContext([]);\nexport const BusRouteContext = createContext([]);\nexport const UserLocationContext = createContext({ longitude: 121.5410178, latitude: 25.0208745 });\nfunction App() {\n  const [busStation, setBusStation] = useState([]);\n  const [busRoute, setBusRoute] = useState([]);\n  const [userLocation, setUserLocation] = useState(useContext(UserLocationContext));\n  // console.log(busStation);\n  // console.log('user location', userLocation);\n  // console.log('near by bus station', getNearByBusStation(busStation, userLocation));\n  // console.log('get bus estimated arrival', getBusRouteEstimatedArrival('Taipei', 'TPE10181'));\n  return (\n    <div className=\"App\" >\n\n      <PosUserLocation setUserLocation={setUserLocation} />\n      <StoreBusStation setBusStation={setBusStation} />\n      <StoreBusRoute setBusRoute={setBusRoute} />\n      <UserLocationContext.Provider value={userLocation}>\n        <BusStationContext.Provider value={busStation}>\n          <BusRouteContext.Provider value={busRoute}>\n            <div className='min-h-screen flex flex-col flex-nowrap' >\n            <Header />\n              {renderRoutes(routes)}\n            <Footer/>\n            </div>\n          </BusRouteContext.Provider>\n        </BusStationContext.Provider>\n      </UserLocationContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction ScrollToTop({ history }) {\n    useEffect(() => {\n        const unlisten = history.listen(() => {\n            window.scrollTo(0, 0);\n        });\n        return () => {\n            unlisten();\n        }\n    }, []);\n\n    return (null);\n}\n\nexport default withRouter(ScrollToTop);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './assets/styles/index.scss';\nimport 'swiper/swiper-bundle.min.css';\nimport 'leaflet/dist/leaflet.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ScrollToTop from './components/ScrollToTop';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n    <ScrollToTop />\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}